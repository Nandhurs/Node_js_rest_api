{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","acc","email","body","password","save","err","send","json","message","get","find","data","findOne","params","put","delete","remove"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;kBAIc,gBAAe;AAAA,QAAbA,MAAa,QAAbA,MAAa;AAAA,QAANC,EAAM,QAANA,EAAM;;;AAEzB,QAAIC,MAAM,sBAAV;;AAGAA,QAAIC,IAAJ,CAAS,MAAT,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAAW;AACvB,YAAIC,MAAM,uBAAV;AACAA,YAAIC,KAAJ,GAAYH,IAAII,IAAJ,CAASD,KAArB;AACAD,YAAIG,QAAJ,GAAeL,IAAII,IAAJ,CAASC,QAAxB;AACAH,YAAII,IAAJ,CAAS,UAACC,GAAD,EAAO;AACZ,gBAAGA,GAAH,EAAO;AACHN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAAS,EAACC,SAAQ,QAAT,EAAT;AACH,SALD;AAMH,KAVD;;AAYAZ,QAAIa,GAAJ,CAAQ,MAAR,EAAe,UAACX,GAAD,EAAKC,GAAL,EAAW;AACtB,0BAAQW,IAAR,CAAa,EAAb,EAAgB,UAACL,GAAD,EAAKM,IAAL,EAAY;AACxB,gBAAGN,GAAH,EAAO;AACHN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAASI,IAAT;AACH,SALD;AAQH,KATD;;AAWAf,QAAIa,GAAJ,CAAQ,aAAR,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAAW;AAC7B,0BAAQa,OAAR,CAAgB,EAACX,OAAMH,IAAIe,MAAJ,CAAWZ,KAAlB,EAAhB,EAAyC,UAACI,GAAD,EAAKM,IAAL,EAAY;AACjD,gBAAGN,GAAH,EAAO;AACHN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAASI,IAAT;AACH,SALD;AAQH,KATD;;AAWAf,QAAIkB,GAAJ,CAAQ,gBAAR,EAAyB,UAAChB,GAAD,EAAKC,GAAL,EAAW;AAChC,0BAAQa,OAAR,CAAgB,EAACX,OAAMH,IAAIe,MAAJ,CAAWZ,KAAlB,EAAhB,EAAyC,UAACI,GAAD,EAAKM,IAAL,EAAY;AACjD,gBAAGN,GAAH,EAAO;AACHN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDM,iBAAKV,KAAL,GAAaH,IAAII,IAAJ,CAASD,KAAtB;AACAU,iBAAKR,QAAL,GAAgBL,IAAII,IAAJ,CAASC,QAAzB;AACAQ,iBAAKP,IAAL,CAAU,eAAK;AACX,oBAAGC,GAAH,EAAO;AACHN,wBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,oBAAIO,IAAJ,CAAS,SAAT;AACH,aALD;AAOH,SAbD;AAgBH,KAjBD;;AAmBJV,QAAImB,MAAJ,CAAW,gBAAX,EAA4B,UAACjB,GAAD,EAAKC,GAAL,EAAW;AACnC,0BAAQiB,MAAR,CAAe,EAACf,OAAMH,IAAIe,MAAJ,CAAWZ,KAAlB,EAAf,EAAwC,UAACI,GAAD,EAAO;AAC3C,gBAAGA,GAAH,EAAO;AACHN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACHN,gBAAIO,IAAJ,CAAS,SAAT;AACD,SALD;AAMH,KAPD;;AASA,WAAOV,GAAP;AAGC,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport bodyParser from 'body-parser';\r\nimport account from '../model/account';\r\nimport {Router} from 'express';\r\n\r\n\r\n\r\nexport default({config,db})=>{\r\n\r\n    let api = Router();\r\n\r\n\r\n    api.post('/add',(req,res)=>{\r\n        let acc = new account();\r\n        acc.email = req.body.email;\r\n        acc.password = req.body.password;\r\n        acc.save((err)=>{\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json({message:\"stored\"});\r\n        });\r\n    });\r\n\r\n    api.get('/get',(req,res)=>{\r\n        account.find({},(err,data)=>{\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(data)\r\n        })\r\n        \r\n        \r\n    });\r\n\r\n    api.get('/get/:email',(req,res)=>{\r\n        account.findOne({email:req.params.email},(err,data)=>{\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(data)\r\n        })\r\n        \r\n        \r\n    });\r\n\r\n    api.put('/update/:email',(req,res)=>{\r\n        account.findOne({email:req.params.email},(err,data)=>{\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            data.email = req.body.email;\r\n            data.password = req.body.password\r\n            data.save(err=>{\r\n                if(err){\r\n                    res.send(err)\r\n                }\r\n                res.send('updated')\r\n            })\r\n          \r\n        })\r\n        \r\n        \r\n    });\r\n\r\napi.delete('/delete/:email',(req,res)=>{\r\n    account.remove({email:req.params.email},(err)=>{\r\n        if(err){\r\n            res.send(err);\r\n        }\r\n      res.send(\"deleted\")\r\n    });\r\n});\r\n\r\nreturn api;\r\n\r\n\r\n} \r\n\r\n"]}